{"version":3,"sources":["components/Note.js","services/note.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","style","width","margin","textAlign","color","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","catch","error","console","log","length","notesToShow","filter","map","find","changedNote","returnedNote","setTimeout","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00e7e7ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"Make not important\" : \"Make important\";\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance} className=\"importance-btn\">{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst noteService = { getAll, create, update }\r\n\r\nexport default noteService;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/note\";\r\n\r\nconst Notification = ({ message }) => {\r\n  const errorStyle = {\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    color: \"rgb(207, 90, 90)\",\r\n    fontSize: 16,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    marginBottom: 50,\r\n  };\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={errorStyle}>{message}</div>;\r\n};\r\n\r\nconst App = () => {\r\n  // setup hooks\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then((initialNotes) => {\r\n        setNotes(initialNotes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  console.log(\"render\", notes.length, \"notes\");\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    const noteObj = {\r\n      id: notes.length + 1,\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    noteService.create(noteObj).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value);\r\n  };\r\n\r\n  const toggleImportance = (id) => {\r\n    const note = notes.find((note) => note.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          `The note \"${note.content}\" was already deleted from the server.`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter((note) => note.id !== id));\r\n      });\r\n    console.log(notes);\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div className=\"show\">\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          Show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportance(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}